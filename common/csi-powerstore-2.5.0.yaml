# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

apiVersion: v1
kind: ServiceAccount
metadata:
  name: powerstore-controller
  namespace: csi-powerstore
---
# Source: csi-powerstore/templates/node.yaml
#
#
# Copyright © 2020-2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

apiVersion: v1
kind: ServiceAccount
metadata:
  name: powerstore-node
  namespace: csi-powerstore
---
# Source: csi-powerstore/templates/driver-config-params.yaml
#
#
# Copyright © 2021-2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: powerstore-config-params
  namespace: csi-powerstore
data:
  driver-config-params.yaml: |
    CSI_LOG_LEVEL: "debug"
    CSI_LOG_FORMAT: "JSON"
---
# Source: csi-powerstore/templates/controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: powerstore-controller
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots", "volumesnapshots/status"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  # below for resizer
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  # below for dell-csi-replicator
  # Permissions for CSIStorageCapacity
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
# Source: csi-powerstore/templates/node.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: powerstore-node
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "delete", "get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumesclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["security.openshift.io"]
    resourceNames: ["privileged"]
    resources: ["securitycontextconstraints"]
    verbs: ["use"]
---
# Source: csi-powerstore/templates/controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: powerstore-controller
subjects:
  - kind: ServiceAccount
    name: powerstore-controller
    namespace: csi-powerstore
roleRef:
  kind: ClusterRole
  name: powerstore-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-powerstore/templates/node.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: powerstore-node
subjects:
  - kind: ServiceAccount
    name: powerstore-node
    namespace: csi-powerstore
roleRef:
  kind: ClusterRole
  name: powerstore-node
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-powerstore/templates/node.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: powerstore-node
  namespace: csi-powerstore
spec:
  selector:
    matchLabels:
      app: powerstore-node
  template:
    metadata:
      labels:
        app: powerstore-node
    spec:


      serviceAccount: powerstore-node
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostIPC: true
      containers:
        - name: driver
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: dellemc/csi-powerstore:v2.5.0
          imagePullPolicy: IfNotPresent
          command: [ "/csi-powerstore" ]
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/csi-powerstore.dellemc.com/csi_sock
            - name: X_CSI_MODE
              value: node
            - name: X_CSI_POWERSTORE_KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: X_CSI_POWERSTORE_NODE_NAME_PREFIX
              value: eksa-node
            - name: X_CSI_POWERSTORE_NODE_ID_PATH
              value: /node-id
            - name: X_CSI_POWERSTORE_NODE_CHROOT_PATH
              value: /noderoot
            - name: X_CSI_POWERSTORE_TMP_DIR
              value: /var/lib/kubelet/plugins/csi-powerstore.dellemc.com/tmp
            - name: X_CSI_DRIVER_NAME
              value: csi-powerstore.dellemc.com
            - name: X_CSI_FC_PORTS_FILTER_FILE_PATH
              value: /etc/fc-ports-filter
            - name: X_CSI_DRIVER_NAME
              value: csi-powerstore.dellemc.com
            - name: X_CSI_POWERSTORE_ENABLE_CHAP
              value: "false"
            - name: X_CSI_POWERSTORE_CONFIG_PATH
              value: /powerstore-config/config
            - name: X_CSI_POWERSTORE_CONFIG_PARAMS_PATH
              value: /powerstore-config-params/driver-config-params.yaml
            - name: GOPOWERSTORE_DEBUG
              value: "true"
          volumeMounts:
            - name: driver-path
              mountPath: /var/lib/kubelet/plugins/csi-powerstore.dellemc.com
            - name: csi-path
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"
            - name: pods-path
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: dev
              mountPath: /dev
            - name: sys
              mountPath: /sys
            - name: run
              mountPath: /run
            - name: node-id
              mountPath: /node-id
            - name: etciscsi
              mountPath: /etc/iscsi
            - name: mpath
              mountPath: /etc/multipath.conf
            - name: noderoot
              mountPath: /noderoot
            - name: powerstore-config
              mountPath: /powerstore-config
            - name: powerstore-config-params
              mountPath: /powerstore-config-params
        - name: registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.6.0
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-powerstore.dellemc.com/csi_sock
          env:
            - name: ADDRESS
              value: /csi/csi_sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: registration-dir
              mountPath: /registration
            - name: driver-path
              mountPath: /csi
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: driver-path
          hostPath:
            path: /var/lib/kubelet/plugins/csi-powerstore.dellemc.com
            type: DirectoryOrCreate
        - name: csi-path
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
        - name: pods-path
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: node-id
          hostPath:
            path: /etc/machine-id
            type: File
        - name: etciscsi
          hostPath:
            path: /etc/iscsi
            type: DirectoryOrCreate
        - name: mpath
          hostPath:
            path: /etc/multipath.conf
            type: FileOrCreate
        - name: noderoot
          hostPath:
            path: /
            type: Directory
        - name: sys
          hostPath:
            path: /sys
            type: Directory
        - name: run
          hostPath:
            path: /run
            type: Directory
        - name: powerstore-config-params
          configMap:
            name: powerstore-config-params
        - name: powerstore-config
          secret:
            secretName: powerstore-config
---
# Source: csi-powerstore/templates/controller.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: powerstore-controller
  namespace: csi-powerstore
spec:
  selector:
    matchLabels:
      name: powerstore-controller
  replicas: 2
  template:
    metadata:
      labels:
        name: powerstore-controller
    spec:


      serviceAccountName: powerstore-controller
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                      - powerstore-controller
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v4.0.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election"
            - "--worker-threads=130"
            - "--resync=10s"
            - "--timeout=130s"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi


        - name: provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.3.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--volume-name-prefix=EKSA_CLUSTER_NAME-eksa-vol"
            - "--volume-name-uuid-length=10"
            - "--v=5"
            - "--leader-election"
            - "--default-fstype=ext4"
            - "--extra-create-metadata"
            - "--feature-gates=Topology=true"
            - "--enable-capacity=true"
            - "--capacity-ownerref-level=2"
            - "--capacity-poll-interval=5m"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: snapshotter
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v6.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election"
            - "--snapshot-name-prefix=EKSA_CLUSTER_NAME-eksa-snap"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi


        - name: csi-metadata-retriever
          image: dellemc/csi-metadata-retriever:v1.2.0
          imagePullPolicy: IfNotPresent
          command: [ "/csi-metadata-retriever" ]
          env:
            - name: CSI_RETRIEVER_ENDPOINT
              value: /var/run/csi/csi_retriever.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: driver
          image: dellemc/csi-powerstore:v2.5.0
          imagePullPolicy: IfNotPresent
          command: [ "/csi-powerstore" ]
          env:
            - name: CSI_ENDPOINT
              value: /var/run/csi/csi.sock
            - name: CSI_RETRIEVER_ENDPOINT
              value: /var/run/csi/csi_retriever.sock
            - name: X_CSI_MODE
              value: controller
            - name: X_CSI_DRIVER_NAME
              value: csi-powerstore.dellemc.com
            - name: X_CSI_POWERSTORE_EXTERNAL_ACCESS
              value:
            - name: X_CSI_NFS_ACLS
              value: "0777"
            - name: X_CSI_POWERSTORE_CONFIG_PATH
              value: /powerstore-config/config
            - name: X_CSI_POWERSTORE_CONFIG_PARAMS_PATH
              value: /powerstore-config-params/driver-config-params.yaml
            - name: GOPOWERSTORE_DEBUG
              value: "true"
            - name: CSI_AUTO_ROUND_OFF_FILESYSTEM_SIZE
              value: "false"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
            - name: powerstore-config
              mountPath: /powerstore-config
            - name: powerstore-config-params
              mountPath: /powerstore-config-params
      volumes:
        - name: socket-dir
          emptyDir:
        - name: powerstore-config-params
          configMap:
            name: powerstore-config-params
        - name: powerstore-config
          secret:
            secretName: powerstore-config
---
# Source: csi-powerstore/templates/csidriver.yaml
#
#
# Copyright © 2020-2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi-powerstore.dellemc.com
spec:
  storageCapacity: true
  podInfoOnMount: true
  fsGroupPolicy: ReadWriteOnceWithFSType
  volumeLifecycleModes:
  - Persistent
  - Ephemeral
